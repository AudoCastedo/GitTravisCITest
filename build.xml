<project name="Sample usage of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

    <property file="build.properties"/>
    <property environment="env"/>

    <!-- Setting default value for username, password and session id properties to empty string 
         so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
         will be treated literally.
    -->
    <condition property="sf.username" value=""> <not> <isset property="sf.username"/> </not> </condition>
    <condition property="sf.password" value=""> <not> <isset property="sf.password"/> </not> </condition>
    <condition property="sf.sessionId" value=""> <not> <isset property="sf.sessionId"/> </not> </condition>

    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="${basedir}/lib/ant-salesforce.jar" />
        </classpath>
    </taskdef>
    <!-- Retrieve an upacakged set of metada from your org-->
    <!-- The file umpackage/package.xmllists what is to be retrieved -->
    <target name="retrieve">
        <mkdir dir="retrieveSource"/>
        <!-- Retrieve the contents into another directory -->
        <sf:retrieve username="${sf.username}" password="${sf.password}"
          sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}"
          unpackaged="retrieve/package.xml" retrieveTarget="retrieveSource" />
    </target>

    <!-- Deploy the umpackaged set of metada retrieved with retrieveUnPackaged and run test  -->
    <target name="deploy">
        <sf:deploy username="${sf.username}" password="${sf.password}"
          sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" 
          deployRoot="retrieveSource" rollbackOnError="true"/>
    </target>

    <!-- Deploy the umpackaged set of metada retrieved with retrieveUnPackaged and run test  -->
    <target name="remove">
        <sf:deploy username="${sf.username}" password="${sf.password}"
          sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" 
          deployRoot="remove"/>
    </target>
    
  </project>
